var _ = require('underscore');


var Storage = {

	categories : {

	},

	gifs : {

	},

	user : {

	},

	avatars : {
		'Scott' : '23423545'
	}

}




/*

var createTagArray = function(tags){
	return _.chain(tags.toLowerCase().split(' '))
		.map(function(term){
			return term.split(',')
		})
		.flatten()
		.value();

}

*/



module.exports = {

	setGifs : function(gifs){
		Storage.gifs = _.reduce(gifs, function(r, gif){
			r[gif.id] = gif
			return r;
		},{})
	},

	getGifs : function(){
		return Storage.gifs;
	},

	getGif : function(id){
		return Storage.gifs[id];
	},


	getQuery : function(){
		if(typeof window === 'undefined') return;

		if(document.location.search){
			var path = document.location.search;
			var query = _.object(_.map(path.substring(path.indexOf('?')+1).split('&'), function(part){
				return part.split('=');
			}));

			return decodeURIComponent(query.q);
		}

	},

	createSearchObject : function(query){
		var result = {
			buckets : [],
			users : [],
			tags : []
		};

		if(!query) return result;

		var searchTerms = _.chain(query.toLowerCase().split(' '))
			.map(function(term){
				return term.split(',')
			})
			.flatten()
			.filter(function(term){
				return term !== "";
			})
			.value();


		_.each(searchTerms, function(term){
			if(term.indexOf('by:') === 0){
				result.users.push(term.substring(3));
			}else if(term.indexOf('in:') === 0){
				result.buckets.push(term.substring(3));
			}else{
				result.tags.push(term)
			}
		})

		return result;
	},

	search : function(searchObj){
		var result = {
			all : [],
			uploadedBy : [],
			favouritedBy : []
		}

		result.all = _.filter(Storage.gifs, function(gif){
			gif.tags = gif.tags || '';

			if(searchObj.users.length !== 0){
				var isUploaded = _.contains(searchObj.users, gif.user.toLowerCase());
				var isFav = !!_.intersection(searchObj.users, gif.favouritedBy).length;

				if(isUploaded) result.uploadedBy.push(gif);
				if(isFav) result.favouritedBy.push(gif);

				if(!isUploaded && !isFav) return false;
			}

			if(searchObj.buckets.length !== 0
				&& !_.intersection(searchObj.buckets, gif.buckets).length) return false;

			if(searchObj.tags.length !== 0){
				var res = _.every(searchObj.tags, function(tag){
					return gif.tags.toLowerCase().indexOf(tag) !== -1 ||
						gif.buckets.join(' ').indexOf(tag) !== -1;
				});

				if(!res) return false;
			}
			return true;
		});

		return result;
	},

};
